events {
    worker_connections  1024;
}

http {
    error_log /var/log/nginx/error.log debug;  # Add the debug flag
    server {
        listen 3001;
        client_max_body_size 100M; # Allow file uploads up to 100MB
        client_body_timeout 120s;  # Allow 2 minutes to receive the client's request body
        keepalive_timeout  120s;   # Allow 2 minutes of inactivity on a keep-aliv

        # Regular HTTP requests
        location / {
            proxy_pass http://192.168.150.239:3000;  # Your backend server address
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # WebSocket requests
        location /ws/ {
            proxy_pass http://192.168.150.239:3000;  # Your backend server address
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }

        # Exact match for the URI /status
        location = /status {
                return 200 'Server is running!';
        }
    }

    server {
        listen 5000;
        client_max_body_size 100M; # Allow file uploads up to 100MB
        client_body_timeout 120s;  # Allow 2 minutes to receive the client's request body
        keepalive_timeout  120s;   # Allow 2 minutes of inactivity on a keep-aliv

        # Regular HTTP requests
        location / {
            proxy_pass http://192.168.150.239:5000;  # Your backend server address
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # WebSocket requests
        location /ws/ {
            proxy_pass http://192.168.150.239:5000;  # Your backend server address
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }

        # Exact match for the URI /status
        location = /status {
                return 200 'Server is running!';
        }
    }
}
